{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","e","target","handleInputChange","GifGridItem","gif","className","title","src","url","alt","getGifs","category","a","console","log","encodeURI","fetch","resp","json","data","map","id","images","downsized_medium","gifs","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","image","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,oCACA,0BAAMC,SAAU,SAACC,GAAD,OAA4BA,EAT1CC,sBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,QAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAAU,SAACP,GAAD,OAnBI,SAACQ,GACvB,IAAIF,EAAQE,EAAEC,OAAOH,MACrBR,EAAcQ,GAiBeI,CAAkBV,SCvB1CW,EAAc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAE1B,OACI,yBAAKC,UAAU,6CACX,2BAAKD,EAAIE,OACT,yBAAKC,IAAKH,EAAII,IAAKC,IAAKL,EAAIE,U,uBCN3BI,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACnBC,QAAQC,IAAR,qBAA0BH,IACpBH,EAFa,iDAEoCO,UAAUJ,GAF9C,sDAGAK,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAJY,UAMAA,EAAKC,KAAK,YACzB,MAAO,CACHC,GAFgD,EAAxBA,GAGxBf,MAHgD,EAApBA,MAI5BE,IAJgD,EAAbc,OAIvBC,iBAAiBf,QAVlB,eAMbgB,EANa,yBAcZA,GAdY,4CAAH,sDCIPC,EAAU,SAAC,GAAiB,IAAhBd,EAAe,EAAfA,SAAe,ECAZ,SAAEA,GAAe,IAAD,EAEdvB,mBAAS,CAC/B+B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAW,WACPnB,EAASC,GACJmB,MAAM,SAAAN,GACHO,YAAW,WACPH,EAAS,CACLT,KAAMK,EACNE,SAAS,MAEd,WAGZ,CAACf,IAEGgB,EDnByBK,CAAcrB,GAAjCsB,EADuB,EAC5Bd,KAAYO,EADgB,EAChBA,QAEpB,OACI,oCACI,4BAAKf,GACHe,GAAW,uBAAGrB,UAAU,yCAAb,eACb,yBAAKA,UAAU,gBAEX4B,EAAMb,KAAK,SAAAhB,GAAG,OACV,kBAAC,EAAD,CAAa8B,IAAK9B,EAAIiB,GAAIjB,IAAKA,UEYpC+B,EAtBI,WAAO,IAAD,EAEa/C,mBAAS,CAAC,WAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAKvB,OACE,yBAAKkB,UAAU,OACb,+CACA,kBAAC,EAAD,CAAalB,cAAeA,IAE1B,6BAEIS,EAAWwB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CAASuB,IAAKvB,EAAUA,SAAUA,UCZhDyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.feab7c84.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        var value = e.target.value;\r\n        setInputValue(value);\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 3 ){\r\n            setCategories( categories => [inputValue, ...categories ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={(event) => handleSubmitForm(event)}>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={(event) => handleInputChange(event)}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ gif }) => {\r\n\r\n    return (\r\n        <div className=\"cardGif animate__animated animate__fadeIn\">\r\n            <p>{ gif.title }</p>\r\n            <img src={gif.url} alt={gif.title} />\r\n        </div>\r\n    )\r\n\r\n}","\r\nexport const getGifs = async ( category ) => {\r\n    console.log(`categoria: ${category}`)\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=HR4CUGz4ehFGVwkTEeZq34xYEOeJWGFh`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = await data.map( ({ id, title, images }) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url: images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category }) => {\r\n    const { data:image, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__fadeInDown\">Loading ...</p>}\r\n            <div className=\"content_gifs\">\r\n            {\r\n                image.map( gif => (\r\n                    <GifGridItem key={gif.id} gif={gif} />\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}","\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( gifs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: gifs,\r\n                        loading: false\r\n                    })\r\n                }, 1500);\r\n                \r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\n\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const App = () => {\n\n  const [categories, setCategories] = useState(['homero']);\n\n  \n  return (\n    <div className=\"App\">\n      <h2>Giff Expert App</h2>\n      <AddCategory setCategories={setCategories}/>\n      {\n        <div>\n          {\n            categories.map( category => (\n              <GifGrid key={category} category={category} />\n            ))\n          }\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}